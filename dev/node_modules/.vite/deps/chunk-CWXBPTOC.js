import {
  add_locations,
  attribute_effect,
  check_target,
  each,
  element,
  hmr,
  index,
  legacy_api,
  prop,
  rest_props,
  snippet,
  validate_dynamic_element_tag
} from "./chunk-BBZFQ53V.js";
import {
  append,
  comment,
  from_svg
} from "./chunk-5CZJDXBM.js";
import {
  FILENAME,
  HMR,
  add_svelte_meta,
  child,
  first_child,
  get,
  noop,
  pop,
  push,
  reset,
  set,
  sibling,
  to_array,
  user_derived
} from "./chunk-4WNWHWIS.js";

// node_modules/@lucide/svelte/dist/defaultAttributes.js
var defaultAttributes = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": 2,
  "stroke-linecap": "round",
  "stroke-linejoin": "round"
};
var defaultAttributes_default = defaultAttributes;

// node_modules/@lucide/svelte/dist/Icon.svelte
Icon[FILENAME] = "node_modules/@lucide/svelte/dist/Icon.svelte";
var root = add_locations(from_svg(`<svg><!><!></svg>`), Icon[FILENAME], [[5, 0]]);
function Icon($$anchor, $$props) {
  check_target(new.target);
  push($$props, true, Icon);
  const color = prop($$props, "color", 3, "currentColor"), size = prop($$props, "size", 3, 24), strokeWidth = prop($$props, "strokeWidth", 3, 2), absoluteStrokeWidth = prop($$props, "absoluteStrokeWidth", 3, false), iconNode = prop($$props, "iconNode", 19, () => []), props = rest_props(
    $$props,
    [
      "$$slots",
      "$$events",
      "$$legacy",
      "name",
      "color",
      "size",
      "strokeWidth",
      "absoluteStrokeWidth",
      "iconNode",
      "children"
    ],
    "props"
  );
  var $$exports = { ...legacy_api() };
  var svg = root();
  attribute_effect(
    svg,
    ($0) => ({
      ...defaultAttributes_default,
      ...props,
      width: size(),
      height: size(),
      stroke: color(),
      "stroke-width": $0,
      class: [
        "lucide-icon lucide",
        $$props.name && `lucide-${$$props.name}`,
        $$props.class
      ]
    }),
    [
      () => absoluteStrokeWidth() ? Number(strokeWidth()) * 24 / Number(size()) : strokeWidth()
    ]
  );
  var node = child(svg);
  add_svelte_meta(
    () => each(node, 17, iconNode, index, ($$anchor2, $$item) => {
      var $$array = user_derived(() => to_array(get($$item), 2));
      let tag = () => get($$array)[0];
      tag();
      let attrs = () => get($$array)[1];
      attrs();
      var fragment = comment();
      var node_1 = first_child(fragment);
      {
        validate_dynamic_element_tag(tag);
        element(
          node_1,
          tag,
          true,
          ($$element, $$anchor3) => {
            attribute_effect($$element, () => ({ ...attrs() }));
          },
          void 0,
          [15, 4]
        );
      }
      append($$anchor2, fragment);
    }),
    "each",
    Icon,
    14,
    2
  );
  var node_2 = sibling(node);
  add_svelte_meta(() => snippet(node_2, () => $$props.children ?? noop), "render", Icon, 20, 2);
  reset(svg);
  append($$anchor, svg);
  return pop($$exports);
}
if (import.meta.hot) {
  Icon = hmr(Icon, () => Icon[HMR].source);
  import.meta.hot.accept((module) => {
    module.default[HMR].source = Icon[HMR].source;
    set(Icon[HMR].source, module.default[HMR].original);
  });
}
var Icon_default = Icon;

export {
  defaultAttributes_default,
  Icon_default
};
/*! Bundled license information:

@lucide/svelte/dist/defaultAttributes.js:
  (**
   * @license @lucide/svelte v0.543.0 - ISC
   *
   * ISC License
   * 
   * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2023 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2025.
   * 
   * Permission to use, copy, modify, and/or distribute this software for any
   * purpose with or without fee is hereby granted, provided that the above
   * copyright notice and this permission notice appear in all copies.
   * 
   * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
   * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
   * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
   * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
   * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
   * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
   * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   * 
   * ---
   * 
   * The MIT License (MIT) (for portions derived from Feather)
   * 
   * Copyright (c) 2013-2023 Cole Bemis
   * 
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   * 
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   * 
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   * 
   *)
*/
//# sourceMappingURL=chunk-CWXBPTOC.js.map
